---
apiVersion: apps/v1
kind: Deployment 
metadata:
  name: dov-bear-deploy
  labels:
    name: dov-bear-deploy
  namespace: dovns
spec:
  replicas: 3
  selector:
    matchLabels:
      name: dov-bear-po
      dept: dev
  template:
    metadata:
      name: dov-bear-po
      labels:
        name: dov-bear-po
        dept: dev
        deny-all: "true"
        allow-dns: "true"
    spec:
      containers:
      - name: dov-bear-container
        image: chukmunnlee/dov-bear-golang@sha256:ec9c01eabd2e2bd78e75b1dfdeb228da1cf9f3ddc9e62d9d091ee8d73c342a34
        imagePullPolicy: IfNotPresent
        env:
        - name: INSTANCE_NAME
          value: dov-bear
        - name: INSTANCE_HASH
          valueFrom: 
            fieldRef:
              fieldPath: status.podIP
        - name: PORT 
          value: "3000"
        ports:
        - containerPort: 3000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
        resources:
          requests:
            memory: 32Mi
            cpu: 100m
          limits:
            memory: 32Mi
            cpu: 100m

--- 
apiVersion: v1 
kind: Service 
metadata: 
  name: dov-bear-svc 
  labels:
    name: dov-bear-svc 
  namespace: dovns
spec:
  type: ClusterIP
  selector: 
    name: dov-bear-po
    dept: dev
  ports: 
  - port: 3000 
    targetPort: 3000

--- 
apiVersion: v1 
kind: Service 
metadata: 
  name: dov-bear-hsvc 
  labels:
    name: dov-bear-hsvc 
  namespace: dovns
spec:
  clusterIP: None
  selector: 
    name: dov-bear-po
    dept: dev
  ports: 
  - port: 3000 
    targetPort: 3000

--- 
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata: 
  name: dov-bear-hpa
  labels:
    name: dov-bear-hpa
  namespace: dovns
spec:
  minReplicas: 1
  maxReplicas: 4
  scaleTargetRef: 
    apiVersion: apps/v1 
    kind: Deployment 
    name: dov-bear-deploy
  metrics:
  - type: Resource
    resource:  
      name: memory
      target:
        type: Utilization 
        averageUtilization: 30

---
apiVersion: networking.k8s.io/v1 
kind: NetworkPolicy 
metadata:
  name: deny-all
  namespace: dovns
spec: 
  policyTypes:
  - Ingress 
  - Egress
  podSelector: 
    matchLabels: 
      deny-all: "true"
---
apiVersion: networking.k8s.io/v1 
kind: NetworkPolicy 
metadata:
  name: allow-dns
  namespace: dovns
spec: 
  policyTypes:
  - Egress
  podSelector: 
    matchLabels: 
      allow-dns: "true"
  egress:
  - to: 
    - ports:
      - port: 53
        protocol: TCP
      - port: 53
        protocol: UDP